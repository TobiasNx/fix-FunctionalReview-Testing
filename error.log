[main] INFO oersi.ETL - Running ./data/approved/emit_fields/emit_fields.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/vaccuum/vacuum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/lookUpWithArray/lookup_array.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/varTest/var.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/replace_all/replace_all.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/reverse/reverse.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/join_field/join_field_xml.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - join_field_xml.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/approved/join_field/join_field_xml.fix, line 1): join_field("animals", ",")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:162)
	at org.metafacture.xml.GenericXmlHandler.endElement(GenericXmlHandler.java:196)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:610)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1718)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2883)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:534)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1216)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:69)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:43)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected String, got Hash
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:297)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:290)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:295)
	at org.metafacture.metafix.Value.lambda$asString$6(Value.java:182)
	at org.metafacture.metafix.Value.extractType(Value.java:214)
	at org.metafacture.metafix.Value.asString(Value.java:182)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.metafacture.metafix.FixMethod$30.lambda$apply$0(FixMethod.java:378)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:304)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:277)
	at org.metafacture.metafix.FixMethod$30.lambda$apply$1(FixMethod.java:378)
	at org.metafacture.metafix.Value.extractType(Value.java:214)
	at org.metafacture.metafix.FixPath.transformIn(FixPath.java:146)
	at org.metafacture.metafix.FixMethod$30.apply(FixMethod.java:377)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 29 more
[main] INFO oersi.ETL - Import channel join_field_xml.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/approved/join_field/join_field_xml.fix, line 1): join_field("animals", ",") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/approved/index/index.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/prepend/prepend.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/count/count.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/map/test3_externalPutFilemap.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/map/test1_externalMapInline.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/map/test2_internalPutMap.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/sum/sum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/append/append.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/nothing/nothing.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/sort_field/sort_field.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/appendArrays_strings/test_append_string.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/uniq/uniq.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test2.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test1.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test3.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test6.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test5.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/wildCardTest/wildcard_test4.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/split_field/split_field_2.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/split_field/split_field_1.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/random/random.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/filter/filter.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/rename/rename.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/include/append.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/conditionalWithWildpath/multipleRecords/conditionalWildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/conditionalWithWildpath/oneRecord/conditionalWildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/lookupWithAsterisk/lookupWithAsterisk.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/copy_array/move_copy.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/appendArray_objects/test_append_object.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/move_field_in_object_array/move_field.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/vacuumEmptyFieldsInArray/vacuum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/moveToNewOwnSubfield/moveToNewOwnSubfield.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - moveToNewOwnSubfield.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/moveToNewOwnSubfield/moveToNewOwnSubfield.fix, line 1): move_field("fictional", "fictional.animal")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:162)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected Array or Hash, got String
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:297)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:290)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:295)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:264)
	at org.metafacture.metafix.FixPath.appendIn(FixPath.java:101)
	at org.metafacture.metafix.Value$Hash.appendValue(Value.java:586)
	at org.metafacture.metafix.Value$Hash.lambda$copy$3(Value.java:578)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:383)
	at org.metafacture.metafix.Value$Hash.lambda$copy$4(Value.java:578)
	at org.metafacture.metafix.Value.lambda$asList$7(Value.java:202)
	at org.metafacture.metafix.Value.newArray(Value.java:120)
	at org.metafacture.metafix.Value.asList(Value.java:198)
	at org.metafacture.metafix.Value.asList(Value.java:186)
	at org.metafacture.metafix.Value$Hash.copy(Value.java:578)
	at org.metafacture.metafix.FixMethod$12.apply(FixMethod.java:165)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel moveToNewOwnSubfield.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/moveToNewOwnSubfield/moveToNewOwnSubfield.fix, line 1): move_field("fictional", "fictional.animal") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/testing/alma_structure/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/missingErrorWhenTrailingEndIsMissing/missingError.flux with 5 arguments (configure output details in log4j.properties)
[main] WARN org.metafacture.metafix.validation.XtextValidator - The FixStandaloneSetup file '/home/tobias/git/fix-FunctionalReview-Testing/data/testing/missingErrorWhenTrailingEndIsMissing/missingError.fix' has 1 issue:
[main] WARN org.metafacture.metafix.validation.XtextValidator - - ERROR: mismatched input '<EOF>' expecting 'end' (4:23)
[main] ERROR oersi.ETL - class could not be instantiated: class org.metafacture.metafix.Metafix
org.metafacture.commons.reflection.ReflectionException: class could not be instantiated: class org.metafacture.metafix.Metafix
	at org.metafacture.commons.reflection.ConfigurableClass.newInstance(ConfigurableClass.java:140)
	at org.metafacture.commons.reflection.ObjectFactory.newInstance(ObjectFactory.java:105)
	at org.metafacture.flux.parser.FluxProgramm.createElement(FluxProgramm.java:78)
	at org.metafacture.flux.parser.FluxProgramm.addElement(FluxProgramm.java:90)
	at org.metafacture.flux.parser.FlowBuilder.pipe(FlowBuilder.java:736)
	at org.metafacture.flux.parser.FlowBuilder.flowtail(FlowBuilder.java:514)
	at org.metafacture.flux.parser.FlowBuilder.flow(FlowBuilder.java:226)
	at org.metafacture.flux.parser.FlowBuilder.flux(FlowBuilder.java:122)
	at org.metafacture.flux.FluxCompiler.compileFlow(FluxCompiler.java:66)
	at org.metafacture.flux.FluxCompiler.compile(FluxCompiler.java:54)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.metafacture.commons.reflection.ConfigurableClass.newInstance(ConfigurableClass.java:135)
	... 12 more
Caused by: org.metafacture.metafix.FixParseException: Invalid FixStandaloneSetup resource: /home/tobias/git/fix-FunctionalReview-Testing/./data/testing/missingErrorWhenTrailingEndIsMissing/missingError.fix
	at org.metafacture.metafix.validation.XtextValidator.getValidatedResource(XtextValidator.java:73)
	at org.metafacture.metafix.FixStandaloneSetup.parseFix(FixStandaloneSetup.java:31)
	at org.metafacture.metafix.Metafix.<init>(Metafix.java:109)
	at org.metafacture.metafix.Metafix.<init>(Metafix.java:101)
	... 17 more
[main] INFO oersi.ETL - Running ./data/testing/set_array_existing_array/array-adder.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/prependArrays_strings/test_prepend_string.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/asteriskArray/asteriskArray.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/copyFieldWithPipe/pipe.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - pipe.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/copyFieldWithPipe/pipe.fix, line 4): copy_field("creator[].*.name|CREATOR[].*.name", "test[].$append")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:162)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected Array or Hash, got String
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:297)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:290)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:295)
	at org.metafacture.metafix.FixPath.lambda$findNested$22(FixPath.java:293)
	at org.metafacture.metafix.Value.extractType(Value.java:214)
	at org.metafacture.metafix.FixPath.findNested(FixPath.java:290)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:57)
	at org.metafacture.metafix.FixPath.lambda$findInValue$5(FixPath.java:91)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:304)
	at org.metafacture.metafix.Value$TypeMatcher.ifHash(Value.java:281)
	at org.metafacture.metafix.FixPath.lambda$findInValue$6(FixPath.java:91)
	at org.metafacture.metafix.Value.extractType(Value.java:214)
	at org.metafacture.metafix.FixPath.findInValue(FixPath.java:89)
	at org.metafacture.metafix.FixPath.lambda$findIn$0(FixPath.java:65)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:383)
	at org.metafacture.metafix.FixPath.lambda$findIn$1(FixPath.java:65)
	at org.metafacture.metafix.Value.newArray(Value.java:120)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:65)
	at org.metafacture.metafix.FixPath.lambda$findNested$20(FixPath.java:291)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:304)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:277)
	at org.metafacture.metafix.FixPath.lambda$findNested$22(FixPath.java:291)
	at org.metafacture.metafix.Value.extractType(Value.java:214)
	at org.metafacture.metafix.FixPath.findNested(FixPath.java:290)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:57)
	at org.metafacture.metafix.Value$Hash.copy(Value.java:578)
	at org.metafacture.metafix.FixMethod$9.apply(FixMethod.java:136)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel pipe.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/copyFieldWithPipe/pipe.fix, line 4): copy_field("creator[].*.name|CREATOR[].*.name", "test[].$append") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/testing/repeatedFieldsArrayToXML/newRepeatedField_JSON.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/repeatedFieldsArrayToXML/newRepeatedField_XML.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/retainOnlySubfield/retain.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/singleAppending/appendSingleField.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/manipulateOtherWhileDoList/maniplulate.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/flattening/flatten.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/append_prepend_last/append_prepend_last.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/setArrayIntoArray/setArrayIntoArray.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/doList/wildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/doList/pipe.flux with 5 arguments (configure output details in log4j.properties)
