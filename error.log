[main] INFO oersi.ETL - Running ./data/approved/emit_fields/emit_fields.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/approved/random/random.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/include/append.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/conditionalWithWildpath/multipleRecords/conditionalWildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/review/conditionalWithWildpath/oneRecord/conditionalWildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/vaccuum/vacuum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/lookupWithAsterisk/lookupWithAsterisk.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/appendArray_objects/test_append_object.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/lookUpWithArray/lookup_array.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/varTest/var.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/replace_all/replace_all.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/reverse/reverse.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/vacuumEmptyFieldsInArray/vacuum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/moveToNewOwnSubfield/moveToNewOwnSubfield.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - moveToNewOwnSubfield.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/moveToNewOwnSubfield/moveToNewOwnSubfield.fix, line 1): move_field("fictional", "fictional.animal")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected Hash or Array, got String
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:295)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:288)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:293)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:275)
	at org.metafacture.metafix.Record.add(Record.java:153)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$0(FixMethod.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:382)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$1(FixMethod.java:156)
	at org.metafacture.metafix.Value.lambda$asList$7(Value.java:200)
	at org.metafacture.metafix.Value.newArray(Value.java:118)
	at org.metafacture.metafix.Value.asList(Value.java:196)
	at org.metafacture.metafix.Value.asList(Value.java:184)
	at org.metafacture.metafix.FixMethod$12.apply(FixMethod.java:156)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel moveToNewOwnSubfield.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/moveToNewOwnSubfield/moveToNewOwnSubfield.fix, line 1): move_field("fictional", "fictional.animal") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/a_moved/join_field/join_field_xml.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - join_field_xml.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/join_field/join_field_xml.fix, line 1): join_field("animals", ",")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.xml.GenericXmlHandler.endElement(GenericXmlHandler.java:196)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:610)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1718)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2883)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:534)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:888)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:824)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1216)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:69)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:43)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected String, got Hash
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:295)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:288)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:293)
	at org.metafacture.metafix.Value.lambda$asString$6(Value.java:180)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.Value.asString(Value.java:180)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.metafacture.metafix.FixMethod$30.lambda$apply$0(FixMethod.java:358)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:302)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:275)
	at org.metafacture.metafix.FixMethod$30.lambda$apply$1(FixMethod.java:358)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.Record.transform(Record.java:228)
	at org.metafacture.metafix.FixMethod$30.apply(FixMethod.java:357)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 29 more
[main] INFO oersi.ETL - Import channel join_field_xml.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/join_field/join_field_xml.fix, line 1): join_field("animals", ",") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/a_moved/index/index.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/prepend/prepend.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/count/count.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/map/test3_externalPutFilemap.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - test3_externalPutFilemap.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/map/externalPutFilemap.fix, line 4): lookup("animalGroup", "map")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: org.metafacture.metamorph.api.MorphExecutionException: File not found: data/approved/map/mapfile.tsv
	at org.metafacture.metamorph.maps.FileMap.lambda$null$0(FileMap.java:132)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at org.metafacture.metamorph.maps.FileMap.lambda$null$1(FileMap.java:132)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.metafacture.metamorph.maps.FileMap.lambda$openStream$2(FileMap.java:131)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at org.metafacture.metamorph.maps.FileMap.openStream(FileMap.java:130)
	at org.metafacture.metamorph.maps.FileMap.loadFile(FileMap.java:109)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metamorph.maps.FileMap.loadFiles(FileMap.java:104)
	at org.metafacture.metamorph.maps.FileMap.init(FileMap.java:70)
	at org.metafacture.metamorph.maps.FileMap.get(FileMap.java:180)
	at org.metafacture.metamorph.maps.FileMap.get(FileMap.java:54)
	at org.metafacture.metafix.FixMethod$31.apply(FixMethod.java:385)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel test3_externalPutFilemap.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/map/externalPutFilemap.fix, line 4): lookup("animalGroup", "map") (MorphExecutionException)
[main] INFO oersi.ETL - Running ./data/a_moved/map/test1_externalMapInline.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/map/test2_internalPutMap.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/set_array_existing_array/array-adder.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/prependArrays_strings/test_prepend_string.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/sum/sum.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/asteriskArray/asteriskArray.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - asteriskArray.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/asteriskArray/asteriskArray.fix, line 14): replace_all("nestedTest[].*.test[].*", "o", "__")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.NullPointerException
	at org.metafacture.metafix.Value.split(Value.java:252)
	at org.metafacture.metafix.FixPath.<init>(FixPath.java:40)
	at org.metafacture.metafix.FixPath.to(FixPath.java:140)
	at org.metafacture.metafix.Record.lambda$transform$2(Record.java:206)
	at org.metafacture.metafix.Value.asList(Value.java:190)
	at org.metafacture.metafix.Value.asList(Value.java:184)
	at org.metafacture.metafix.Record.transform(Record.java:203)
	at org.metafacture.metafix.FixMethod$33.apply(FixMethod.java:405)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel asteriskArray.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/asteriskArray/asteriskArray.fix, line 14): replace_all("nestedTest[].*.test[].*", "o", "__") (NullPointerException)
[main] INFO oersi.ETL - Running ./data/a_moved/append/append.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/nothing/nothing.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/copyFieldWithPipe/pipe.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - pipe.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/copyFieldWithPipe/pipe.fix, line 4): copy_field("creator[].*.name|CREATOR[].*.name", "test[].$append")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected Array or Hash, got String
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:295)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:288)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:293)
	at org.metafacture.metafix.FixPath.lambda$findIn$2(FixPath.java:58)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:55)
	at org.metafacture.metafix.FixPath.lambda$findInValue$10(FixPath.java:103)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:302)
	at org.metafacture.metafix.Value$TypeMatcher.ifHash(Value.java:279)
	at org.metafacture.metafix.FixPath.lambda$findInValue$11(FixPath.java:103)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.FixPath.findInValue(FixPath.java:101)
	at org.metafacture.metafix.FixPath.lambda$findIn$5(FixPath.java:69)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:382)
	at org.metafacture.metafix.FixPath.lambda$findIn$6(FixPath.java:68)
	at org.metafacture.metafix.Value.newArray(Value.java:118)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:68)
	at org.metafacture.metafix.FixPath.lambda$findIn$0(FixPath.java:56)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:302)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:275)
	at org.metafacture.metafix.FixPath.lambda$findIn$2(FixPath.java:56)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.FixPath.findIn(FixPath.java:55)
	at org.metafacture.metafix.Record.get(Record.java:128)
	at org.metafacture.metafix.FixMethod$9.apply(FixMethod.java:125)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel pipe.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/copyFieldWithPipe/pipe.fix, line 4): copy_field("creator[].*.name|CREATOR[].*.name", "test[].$append") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/a_moved/sort_field/sort_field.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/appendArrays_strings/test_append_string.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/uniq/uniq.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/retainOnlySubfield/retain.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test2.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test1.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test3.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test6.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test5.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/wildCardTest/wildcard_test4.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/flattening/flatten.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/split_field/split_field_2.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - split_field_2.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/split_field/split_field_2.fix, line 16): move_field("OTHERS[].1.tools","OTHERS[].1.tools[]")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at org.metafacture.metafix.Value$Array.get(Value.java:370)
	at org.metafacture.metafix.FixPath.getReferencedValue(FixPath.java:324)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:243)
	at org.metafacture.metafix.FixPath.lambda$insertInto$20(FixPath.java:273)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:302)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:275)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:273)
	at org.metafacture.metafix.Record.add(Record.java:153)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$0(FixMethod.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:382)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$1(FixMethod.java:156)
	at org.metafacture.metafix.Value.asList(Value.java:190)
	at org.metafacture.metafix.Value.asList(Value.java:184)
	at org.metafacture.metafix.FixMethod$12.apply(FixMethod.java:156)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel split_field_2.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/a_moved/split_field/split_field_2.fix, line 16): move_field("OTHERS[].1.tools","OTHERS[].1.tools[]") (IndexOutOfBoundsException)
[main] INFO oersi.ETL - Running ./data/a_moved/split_field/split_field_1.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/setArrayIntoArray/setArrayIntoArray.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/filter/filter.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/multipleAsterisksCopy/copyWithMultipleAsterisks.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/a_moved/rename/rename.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/copy_array/move_copy.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/ONCAMPUS/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/move_field_in_object_array/move_field.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - move_field.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/move_field_in_object_array/move_field.fix, line 9): move_field("others[].1.ynimals", "others[].1.ynimals[]")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at org.metafacture.metafix.Value$Array.get(Value.java:370)
	at org.metafacture.metafix.FixPath.getReferencedValue(FixPath.java:324)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:243)
	at org.metafacture.metafix.FixPath.lambda$insertInto$20(FixPath.java:273)
	at org.metafacture.metafix.Value$TypeMatcher.match(Value.java:302)
	at org.metafacture.metafix.Value$TypeMatcher.ifArray(Value.java:275)
	at org.metafacture.metafix.FixPath.insertInto(FixPath.java:273)
	at org.metafacture.metafix.Record.add(Record.java:153)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$0(FixMethod.java:157)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.metafacture.metafix.Value$Array.forEach(Value.java:382)
	at org.metafacture.metafix.FixMethod$12.lambda$apply$1(FixMethod.java:156)
	at org.metafacture.metafix.Value.asList(Value.java:190)
	at org.metafacture.metafix.Value.asList(Value.java:184)
	at org.metafacture.metafix.FixMethod$12.apply(FixMethod.java:156)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel move_field.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/move_field_in_object_array/move_field.fix, line 9): move_field("others[].1.ynimals", "others[].1.ynimals[]") (IndexOutOfBoundsException)
[main] INFO oersi.ETL - Running ./data/testing/alma_structure/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/missingErrorWhenTrailingEndIsMissing/missingError.flux with 5 arguments (configure output details in log4j.properties)
[main] WARN org.metafacture.metafix.validation.XtextValidator - The FixStandaloneSetup file '/home/tobias/git/fix-FunctionalReview-Testing/data/testing/missingErrorWhenTrailingEndIsMissing/missingError.fix' has 1 issue:
[main] WARN org.metafacture.metafix.validation.XtextValidator - - ERROR: mismatched input '<EOF>' expecting 'end' (4:23)
[main] ERROR oersi.ETL - class could not be instantiated: class org.metafacture.metafix.Metafix
org.metafacture.commons.reflection.ReflectionException: class could not be instantiated: class org.metafacture.metafix.Metafix
	at org.metafacture.commons.reflection.ConfigurableClass.newInstance(ConfigurableClass.java:140)
	at org.metafacture.commons.reflection.ObjectFactory.newInstance(ObjectFactory.java:105)
	at org.metafacture.flux.parser.FluxProgramm.createElement(FluxProgramm.java:78)
	at org.metafacture.flux.parser.FluxProgramm.addElement(FluxProgramm.java:90)
	at org.metafacture.flux.parser.FlowBuilder.pipe(FlowBuilder.java:736)
	at org.metafacture.flux.parser.FlowBuilder.flowtail(FlowBuilder.java:514)
	at org.metafacture.flux.parser.FlowBuilder.flow(FlowBuilder.java:226)
	at org.metafacture.flux.parser.FlowBuilder.flux(FlowBuilder.java:122)
	at org.metafacture.flux.FluxCompiler.compileFlow(FluxCompiler.java:66)
	at org.metafacture.flux.FluxCompiler.compile(FluxCompiler.java:54)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.metafacture.commons.reflection.ConfigurableClass.newInstance(ConfigurableClass.java:135)
	... 12 more
Caused by: org.metafacture.metafix.FixParseException: Invalid FixStandaloneSetup resource: /home/tobias/git/fix-FunctionalReview-Testing/./data/testing/missingErrorWhenTrailingEndIsMissing/missingError.fix
	at org.metafacture.metafix.validation.XtextValidator.getValidatedResource(XtextValidator.java:73)
	at org.metafacture.metafix.FixStandaloneSetup.parseFix(FixStandaloneSetup.java:31)
	at org.metafacture.metafix.Metafix.<init>(Metafix.java:114)
	at org.metafacture.metafix.Metafix.<init>(Metafix.java:106)
	... 17 more
[main] INFO oersi.ETL - Running ./data/testing/HHU/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/Oncampus/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/tibAV/xml-structure.flux with 5 arguments (configure output details in log4j.properties)
java.net.UnknownHostException: getinfo.tib.eu
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:229)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:300)
	at java.base/sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:266)
	at java.base/sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:373)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:203)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:189)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1592)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
	at ORG.oclc.oai.harvester2.verb.HarvesterVerb.harvest(HarvesterVerb.java:209)
	at ORG.oclc.oai.harvester2.verb.HarvesterVerb.<init>(HarvesterVerb.java:183)
	at ORG.oclc.oai.harvester2.verb.Identify.<init>(Identify.java:48)
	at ORG.oclc.oai.harvester2.app.RawWrite.run(RawWrite.java:113)
	at org.metafacture.biblio.OaiPmhOpener.process(OaiPmhOpener.java:103)
	at org.metafacture.biblio.OaiPmhOpener.process(OaiPmhOpener.java:30)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
[main] ERROR oersi.ETL - xml-structure.flux
org.metafacture.framework.MetafactureException: org.xml.sax.SAXParseException; lineNumber: 3; columnNumber: 1; XML-Dokumentstrukturen müssen innerhalb derselben Entity beginnen und enden.
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:75)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:43)
	at org.metafacture.biblio.OaiPmhOpener.process(OaiPmhOpener.java:121)
	at org.metafacture.biblio.OaiPmhOpener.process(OaiPmhOpener.java:30)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: org.xml.sax.SAXParseException; lineNumber: 3; columnNumber: 1; XML-Dokumentstrukturen müssen innerhalb derselben Entity beginnen und enden.
	at java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1243)
	at org.metafacture.xml.XmlDecoder.process(XmlDecoder.java:69)
	... 9 more
[main] INFO oersi.ETL - Import channel xml-structure.flux FAILED: org.xml.sax.SAXParseException; lineNumber: 3; columnNumber: 1; XML-Dokumentstrukturen müssen innerhalb derselben Entity beginnen und enden. (SAXParseException)
[main] INFO oersi.ETL - Running ./data/testing/writingToPathWithAsterisk/writingToPathWithAsterisk.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/repeatedFieldsArrayToXML/newRepeatedField_JSON.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/repeatedFieldsArrayToXML/newRepeatedField_XML.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/singleAppending/appendSingleField.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/manipulateOtherWhileDoList/maniplulate.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - maniplulate.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/manipulateOtherWhileDoList/manipulate.fix, line 4): replace_all("test[].$last.TÄST","^BEGIN:VCARD[\\s\\S]*FN:(.+)\n[\\s\\S]*\nEND:VCARD$", "$1")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.FixBind$1.lambda$execute$1(FixBind.java:39)
	at org.metafacture.metafix.Value.asList(Value.java:190)
	at org.metafacture.metafix.Value.asList(Value.java:184)
	at org.metafacture.metafix.FixBind$1.execute(FixBind.java:32)
	at org.metafacture.metafix.RecordTransformer.lambda$processDo$1(RecordTransformer.java:107)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processDo(RecordTransformer.java:105)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:87)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected String, got Array
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:295)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:288)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:293)
	at org.metafacture.metafix.Value.lambda$asString$6(Value.java:180)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.Value.asString(Value.java:180)
	at org.metafacture.metafix.FixPath.throwIfNonString(FixPath.java:128)
	at org.metafacture.metafix.Record.transform(Record.java:202)
	at org.metafacture.metafix.FixMethod$33.apply(FixMethod.java:405)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 35 more
[main] INFO oersi.ETL - Import channel maniplulate.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/manipulateOtherWhileDoList/manipulate.fix, line 4): replace_all("test[].$last.TÄST","^BEGIN:VCARD[\\s\\S]*FN:(.+)\n[\\s\\S]*\nEND:VCARD$", "$1") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/testing/append_prepend_last/append_prepend_last.flux with 5 arguments (configure output details in log4j.properties)
[main] ERROR oersi.ETL - append_prepend_last.flux
org.metafacture.metafix.FixExecutionException: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/append_prepend_last/append_prepend_last.fix, line 4): prepend("test[].$last.test","Hello ")
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:181)
	at org.metafacture.metafix.RecordTransformer.processExpression(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFunction(RecordTransformer.java:159)
	at org.metafacture.metafix.RecordTransformer.lambda$process$0(RecordTransformer.java:96)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.metafacture.metafix.RecordTransformer.process(RecordTransformer.java:83)
	at org.metafacture.metafix.RecordTransformer.transformRecord(RecordTransformer.java:74)
	at org.metafacture.metafix.RecordTransformer.transform(RecordTransformer.java:70)
	at org.metafacture.metafix.Metafix.endRecord(Metafix.java:177)
	at org.metafacture.json.JsonDecoder.decode(JsonDecoder.java:257)
	at org.metafacture.json.JsonDecoder.processRecord(JsonDecoder.java:207)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:195)
	at org.metafacture.json.JsonDecoder.process(JsonDecoder.java:45)
	at org.metafacture.io.RecordReader.emitRecord(RecordReader.java:144)
	at org.metafacture.io.RecordReader.process(RecordReader.java:132)
	at org.metafacture.io.RecordReader.process(RecordReader.java:40)
	at org.metafacture.io.FileOpener.process(FileOpener.java:132)
	at org.metafacture.io.FileOpener.process(FileOpener.java:41)
	at org.metafacture.flux.parser.StringSender.process(StringSender.java:43)
	at org.metafacture.flux.parser.Flow.start(Flow.java:118)
	at org.metafacture.flux.parser.FluxProgramm.start(FluxProgramm.java:168)
	at org.metafacture.runner.Flux.main(Flux.java:85)
	at oersi.ETL.run(ETL.java:102)
	at oersi.ETL.main(ETL.java:56)
Caused by: java.lang.IllegalStateException: Expected String, got Array
	at org.metafacture.metafix.Value$TypeMatcher.lambda$orElseThrow$0(Value.java:295)
	at org.metafacture.metafix.Value$TypeMatcher.orElse(Value.java:288)
	at org.metafacture.metafix.Value$TypeMatcher.orElseThrow(Value.java:293)
	at org.metafacture.metafix.Value.lambda$asString$6(Value.java:180)
	at org.metafacture.metafix.Value.extractType(Value.java:212)
	at org.metafacture.metafix.Value.asString(Value.java:180)
	at org.metafacture.metafix.FixPath.throwIfNonString(FixPath.java:128)
	at org.metafacture.metafix.Record.transform(Record.java:202)
	at org.metafacture.metafix.FixMethod$32.apply(FixMethod.java:396)
	at org.metafacture.metafix.RecordTransformer.lambda$processFunction$4(RecordTransformer.java:161)
	at org.metafacture.metafix.RecordTransformer.lambda$processExpression$6(RecordTransformer.java:170)
	at org.metafacture.metafix.RecordTransformer.processFix(RecordTransformer.java:175)
	... 23 more
[main] INFO oersi.ETL - Import channel append_prepend_last.flux FAILED: Error while executing Fix expression (at file:/home/tobias/git/fix-FunctionalReview-Testing/data/testing/append_prepend_last/append_prepend_last.fix, line 4): prepend("test[].$last.test","Hello ") (IllegalStateException)
[main] INFO oersi.ETL - Running ./data/testing/doList/wildcard.flux with 5 arguments (configure output details in log4j.properties)
[main] INFO oersi.ETL - Running ./data/testing/doList/pipe.flux with 5 arguments (configure output details in log4j.properties)
